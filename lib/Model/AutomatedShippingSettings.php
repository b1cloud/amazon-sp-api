<?php
/**
 * AutomatedShippingSettings
 *
 * PHP version 5
 *
 * @category Class
 * @package  B1\AmazonSPAPI
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Selling Partner API for Orders
 *
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools.
 *
 * OpenAPI spec version: v0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.25
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace B1\AmazonSPAPI\Model;

use \ArrayAccess;
use \B1\AmazonSPAPI\ObjectSerializer;

/**
 * AutomatedShippingSettings Class Doc Comment
 *
 * @category Class
 * @description Contains information regarding the Shipping Settings Automation program, such as whether the order&#39;s shipping settings were generated automatically, and what those settings are.
 * @package  B1\AmazonSPAPI
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * @property boolean $hasAutomatedShippingSettings
 * @property string $automatedCarrier
 * @property string $automatedShipMethod
 */
class AutomatedShippingSettings  extends BaseModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AutomatedShippingSettings';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'hasAutomatedShippingSettings' => 'bool',
        'automatedCarrier' => 'string',
        'automatedShipMethod' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'hasAutomatedShippingSettings' => null,
        'automatedCarrier' => null,
        'automatedShipMethod' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'hasAutomatedShippingSettings' => 'HasAutomatedShippingSettings',
        'automatedCarrier' => 'AutomatedCarrier',
        'automatedShipMethod' => 'AutomatedShipMethod'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'hasAutomatedShippingSettings' => 'setHasAutomatedShippingSettings',
        'automatedCarrier' => 'setAutomatedCarrier',
        'automatedShipMethod' => 'setAutomatedShipMethod'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'hasAutomatedShippingSettings' => 'getHasAutomatedShippingSettings',
        'automatedCarrier' => 'getAutomatedCarrier',
        'automatedShipMethod' => 'getAutomatedShipMethod'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }





    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['hasAutomatedShippingSettings'] = isset($data['hasAutomatedShippingSettings']) ? $data['hasAutomatedShippingSettings'] : null;
        $this->container['automatedCarrier'] = isset($data['automatedCarrier']) ? $data['automatedCarrier'] : null;
        $this->container['automatedShipMethod'] = isset($data['automatedShipMethod']) ? $data['automatedShipMethod'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets hasAutomatedShippingSettings
     *
     * @return bool
     */
    public function getHasAutomatedShippingSettings()
    {
        return $this->container['hasAutomatedShippingSettings'];
    }

    /**
     * Sets hasAutomatedShippingSettings
     *
     * @param bool $hasAutomatedShippingSettings If true, this order has automated shipping settings generated by Amazon. This order could be identified as an SSA order.
     *
     * @return $this
     */
    public function setHasAutomatedShippingSettings($hasAutomatedShippingSettings)
    {
        $this->container['hasAutomatedShippingSettings'] = $hasAutomatedShippingSettings;

        return $this;
    }

    /**
     * Gets automatedCarrier
     *
     * @return string
     */
    public function getAutomatedCarrier()
    {
        return $this->container['automatedCarrier'];
    }

    /**
     * Sets automatedCarrier
     *
     * @param string $automatedCarrier Auto-generated carrier for SSA orders.
     *
     * @return $this
     */
    public function setAutomatedCarrier($automatedCarrier)
    {
        $this->container['automatedCarrier'] = $automatedCarrier;

        return $this;
    }

    /**
     * Gets automatedShipMethod
     *
     * @return string
     */
    public function getAutomatedShipMethod()
    {
        return $this->container['automatedShipMethod'];
    }

    /**
     * Sets automatedShipMethod
     *
     * @param string $automatedShipMethod Auto-generated ship method for SSA orders.
     *
     * @return $this
     */
    public function setAutomatedShipMethod($automatedShipMethod)
    {
        $this->container['automatedShipMethod'] = $automatedShipMethod;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


