<?php
/**
 * RemovalShipmentItemAdjustment
 *
 * PHP version 5
 *
 * @category Class
 * @package  B1\AmazonSPAPI
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Selling Partner API for Finances
 *
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * OpenAPI spec version: v0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.25
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace B1\AmazonSPAPI\Model;

use \ArrayAccess;
use \B1\AmazonSPAPI\ObjectSerializer;

/**
 * RemovalShipmentItemAdjustment Class Doc Comment
 *
 * @category Class
 * @description Item-level information for a removal shipment item adjustment.
 * @package  B1\AmazonSPAPI
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RemovalShipmentItemAdjustment  extends BaseModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'RemovalShipmentItemAdjustment';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'removalShipmentItemId' => 'string',
        'taxCollectionModel' => 'string',
        'fulfillmentNetworkSKU' => 'string',
        'adjustedQuantity' => 'int',
        'revenueAdjustment' => '\B1\AmazonSPAPI\Model\Currency',
        'taxAmountAdjustment' => '\B1\AmazonSPAPI\Model\Currency',
        'taxWithheldAdjustment' => '\B1\AmazonSPAPI\Model\Currency'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'removalShipmentItemId' => null,
        'taxCollectionModel' => null,
        'fulfillmentNetworkSKU' => null,
        'adjustedQuantity' => 'int32',
        'revenueAdjustment' => null,
        'taxAmountAdjustment' => null,
        'taxWithheldAdjustment' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'removalShipmentItemId' => 'RemovalShipmentItemId',
        'taxCollectionModel' => 'TaxCollectionModel',
        'fulfillmentNetworkSKU' => 'FulfillmentNetworkSKU',
        'adjustedQuantity' => 'AdjustedQuantity',
        'revenueAdjustment' => 'RevenueAdjustment',
        'taxAmountAdjustment' => 'TaxAmountAdjustment',
        'taxWithheldAdjustment' => 'TaxWithheldAdjustment'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'removalShipmentItemId' => 'setRemovalShipmentItemId',
        'taxCollectionModel' => 'setTaxCollectionModel',
        'fulfillmentNetworkSKU' => 'setFulfillmentNetworkSKU',
        'adjustedQuantity' => 'setAdjustedQuantity',
        'revenueAdjustment' => 'setRevenueAdjustment',
        'taxAmountAdjustment' => 'setTaxAmountAdjustment',
        'taxWithheldAdjustment' => 'setTaxWithheldAdjustment'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'removalShipmentItemId' => 'getRemovalShipmentItemId',
        'taxCollectionModel' => 'getTaxCollectionModel',
        'fulfillmentNetworkSKU' => 'getFulfillmentNetworkSKU',
        'adjustedQuantity' => 'getAdjustedQuantity',
        'revenueAdjustment' => 'getRevenueAdjustment',
        'taxAmountAdjustment' => 'getTaxAmountAdjustment',
        'taxWithheldAdjustment' => 'getTaxWithheldAdjustment'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }





    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['removalShipmentItemId'] = isset($data['removalShipmentItemId']) ? $data['removalShipmentItemId'] : null;
        $this->container['taxCollectionModel'] = isset($data['taxCollectionModel']) ? $data['taxCollectionModel'] : null;
        $this->container['fulfillmentNetworkSKU'] = isset($data['fulfillmentNetworkSKU']) ? $data['fulfillmentNetworkSKU'] : null;
        $this->container['adjustedQuantity'] = isset($data['adjustedQuantity']) ? $data['adjustedQuantity'] : null;
        $this->container['revenueAdjustment'] = isset($data['revenueAdjustment']) ? $data['revenueAdjustment'] : null;
        $this->container['taxAmountAdjustment'] = isset($data['taxAmountAdjustment']) ? $data['taxAmountAdjustment'] : null;
        $this->container['taxWithheldAdjustment'] = isset($data['taxWithheldAdjustment']) ? $data['taxWithheldAdjustment'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets removalShipmentItemId
     *
     * @return string
     */
    public function getRemovalShipmentItemId()
    {
        return $this->container['removalShipmentItemId'];
    }

    /**
     * Sets removalShipmentItemId
     *
     * @param string $removalShipmentItemId An identifier for an item in a removal shipment.
     *
     * @return $this
     */
    public function setRemovalShipmentItemId($removalShipmentItemId)
    {
        $this->container['removalShipmentItemId'] = $removalShipmentItemId;

        return $this;
    }

    /**
     * Gets taxCollectionModel
     *
     * @return string
     */
    public function getTaxCollectionModel()
    {
        return $this->container['taxCollectionModel'];
    }

    /**
     * Sets taxCollectionModel
     *
     * @param string $taxCollectionModel The tax collection model applied to the item.  Possible values:  * MarketplaceFacilitator - Tax is withheld and remitted to the taxing authority by Amazon on behalf of the seller.  * Standard - Tax is paid to the seller and not remitted to the taxing authority by Amazon.
     *
     * @return $this
     */
    public function setTaxCollectionModel($taxCollectionModel)
    {
        $this->container['taxCollectionModel'] = $taxCollectionModel;

        return $this;
    }

    /**
     * Gets fulfillmentNetworkSKU
     *
     * @return string
     */
    public function getFulfillmentNetworkSKU()
    {
        return $this->container['fulfillmentNetworkSKU'];
    }

    /**
     * Sets fulfillmentNetworkSKU
     *
     * @param string $fulfillmentNetworkSKU The Amazon fulfillment network SKU for the item.
     *
     * @return $this
     */
    public function setFulfillmentNetworkSKU($fulfillmentNetworkSKU)
    {
        $this->container['fulfillmentNetworkSKU'] = $fulfillmentNetworkSKU;

        return $this;
    }

    /**
     * Gets adjustedQuantity
     *
     * @return int
     */
    public function getAdjustedQuantity()
    {
        return $this->container['adjustedQuantity'];
    }

    /**
     * Sets adjustedQuantity
     *
     * @param int $adjustedQuantity Adjusted quantity of removal shipmentItemAdjustment items.
     *
     * @return $this
     */
    public function setAdjustedQuantity($adjustedQuantity)
    {
        $this->container['adjustedQuantity'] = $adjustedQuantity;

        return $this;
    }

    /**
     * Gets revenueAdjustment
     *
     * @return \B1\AmazonSPAPI\Model\Currency
     */
    public function getRevenueAdjustment()
    {
        return $this->container['revenueAdjustment'];
    }

    /**
     * Sets revenueAdjustment
     *
     * @param \B1\AmazonSPAPI\Model\Currency $revenueAdjustment The total amount adjusted for disputed items.
     *
     * @return $this
     */
    public function setRevenueAdjustment($revenueAdjustment)
    {
        $this->container['revenueAdjustment'] = $revenueAdjustment;

        return $this;
    }

    /**
     * Gets taxAmountAdjustment
     *
     * @return \B1\AmazonSPAPI\Model\Currency
     */
    public function getTaxAmountAdjustment()
    {
        return $this->container['taxAmountAdjustment'];
    }

    /**
     * Sets taxAmountAdjustment
     *
     * @param \B1\AmazonSPAPI\Model\Currency $taxAmountAdjustment Adjustment on the Tax collected amount on the adjusted revenue.
     *
     * @return $this
     */
    public function setTaxAmountAdjustment($taxAmountAdjustment)
    {
        $this->container['taxAmountAdjustment'] = $taxAmountAdjustment;

        return $this;
    }

    /**
     * Gets taxWithheldAdjustment
     *
     * @return \B1\AmazonSPAPI\Model\Currency
     */
    public function getTaxWithheldAdjustment()
    {
        return $this->container['taxWithheldAdjustment'];
    }

    /**
     * Sets taxWithheldAdjustment
     *
     * @param \B1\AmazonSPAPI\Model\Currency $taxWithheldAdjustment Adjustment the tax withheld and remitted to the taxing authority by Amazon on behalf of the seller. If TaxCollectionModel=MarketplaceFacilitator, then TaxWithheld=TaxAmount (except the TaxWithheld amount is a negative number). Otherwise TaxWithheld=0.
     *
     * @return $this
     */
    public function setTaxWithheldAdjustment($taxWithheldAdjustment)
    {
        $this->container['taxWithheldAdjustment'] = $taxWithheldAdjustment;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


